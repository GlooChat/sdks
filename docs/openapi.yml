openapi: 3.0.1
info:
  title: Gloo
  version: 0.0.143
paths:
  /app:
    post:
      operationId: appService.create
      tags:
        - App
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppResponse'
        '400':
          description: ''
        '401':
          description: ''
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppNotFoundBody'
      security: &ref_0
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppRequest'
  /app/{app_id}:
    post:
      operationId: appService.update
      tags:
        - App
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResponse'
        '400':
          description: ''
        '401':
          description: ''
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppNotFoundBody'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppRequest'
    get:
      operationId: appService.get
      tags:
        - App
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResponse'
        '400':
          description: ''
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppNotFoundBody'
  /app/{app_id}/search:
    post:
      operationId: appService.search
      tags:
        - App
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          description: ''
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppNotFoundBody'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
  /app/{app_id}/document:
    post:
      operationId: documentService.create
      tags:
        - Document
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
        '401':
          description: ''
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentNotFoundBody'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDocumentRequest'
  /app/{app_id}/document/{document_id}:
    delete:
      operationId: documentService.delete
      tags:
        - Document
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            type: string
        - name: document_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
        '401':
          description: ''
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentNotFoundBody'
      security: *ref_0
    post:
      operationId: documentService.update
      tags:
        - Document
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            type: string
        - name: document_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
        '401':
          description: ''
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentNotFoundBody'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentRequest'
    get:
      operationId: documentService.get
      tags:
        - Document
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            type: string
        - name: document_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentNotFoundBody'
  /app/{app_id}/document/{document_id}/content:
    get:
      operationId: documentService.content
      tags:
        - Document
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            type: string
        - name: document_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponseWithContent'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentNotFoundBody'
components:
  schemas:
    CreateAppRequest:
      type: object
      properties:
        name:
          type: string
        embeddings:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddingType'
      required:
        - name
        - embeddings
    CreateAppResponse:
      type: object
      properties:
        app:
          $ref: '#/components/schemas/AppResponse'
        secret_key:
          type: string
      required:
        - app
        - secret_key
    UpdateAppRequest:
      type: object
      properties:
        name:
          type: string
        embeddings:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddingType'
    AppResponse:
      type: object
      properties:
        name:
          type: string
        app_id:
          type: string
        num_documents:
          type: integer
        supported_embeddings:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddingType'
      required:
        - name
        - app_id
        - num_documents
        - supported_embeddings
    SearchRequest:
      type: object
      properties:
        query:
          type: string
        max_content_size:
          type: integer
        included_tags:
          type: array
          items:
            type: string
        excluded_tags:
          type: array
          items:
            type: string
        embedding:
          $ref: '#/components/schemas/EmbeddingType'
      required:
        - query
    SearchResultMetadata:
      type: object
      properties:
        documentId:
          type: string
        title:
          type: string
        source:
          type: string
        tags:
          type: array
          items:
            type: string
        annotations:
          type: array
          items:
            type: string
      required:
        - documentId
        - title
        - source
        - tags
        - annotations
    SearchResult:
      type: object
      properties:
        content:
          type: string
        score:
          type: number
          format: double
        metadata:
          $ref: '#/components/schemas/SearchResultMetadata'
      required:
        - content
        - score
        - metadata
    SearchResponse:
      type: object
      properties:
        num_entries:
          type: integer
        content_size:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
      required:
        - num_entries
        - content_size
        - results
    EmbeddingType:
      type: string
      enum:
        - OPENAI
        - SBERT_MPNET_BASE_V2
    StageType:
      type: string
      enum:
        - QUEUED
        - PROCESSING
        - READY
        - ERROR
    DocumentContent:
      oneOf:
        - type: object
          properties:
            type:
              type: string
        - type: object
          properties:
            type:
              type: array
              items:
                type: string
    DocumentAnnotation:
      type: object
      properties:
        start_byte:
          type: integer
        end_byte:
          type: integer
        text:
          type: string
      required:
        - start_byte
        - end_byte
        - text
    CreateDocumentRequest:
      type: object
      properties:
        name:
          type: string
        source:
          type: string
        tags:
          type: array
          items:
            type: string
        content:
          $ref: '#/components/schemas/DocumentContent'
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/DocumentAnnotation'
      required:
        - name
        - source
        - tags
        - content
    UpdateDocumentRequest:
      type: object
      properties:
        name:
          type: string
        source:
          type: string
        tags:
          type: array
          items:
            type: string
        content:
          $ref: '#/components/schemas/DocumentContent'
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/DocumentAnnotation'
    EmbeddingStatus:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/EmbeddingType'
        stage:
          $ref: '#/components/schemas/StageType'
        update_time_ms:
          type: integer
      required:
        - type
        - stage
        - update_time_ms
    DocumentResponse:
      type: object
      properties:
        document_id:
          type: string
        name:
          type: string
        source:
          type: string
        tags:
          type: array
          items:
            type: string
        status:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddingStatus'
      required:
        - document_id
        - name
        - source
        - tags
        - status
    DocumentResponseWithContent:
      type: object
      properties:
        content:
          type: string
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/DocumentAnnotation'
      required:
        - content
        - annotations
      allOf:
        - $ref: '#/components/schemas/DocumentResponse'
    AppNotFoundBody:
      type: object
      properties:
        app_id:
          type: string
      required:
        - app_id
    DocumentNotFoundBody:
      type: object
      properties:
        document_id:
          type: string
      required:
        - document_id
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
servers:
  - url: https://api.gloo.chat
    description: Production
